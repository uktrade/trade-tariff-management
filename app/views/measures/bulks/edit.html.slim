.breadcrumbs
  ol
    li
      = link_to "Main menu", root_url

    li
      = link_to "Find Measures", measures_url

    li
      = link_to "Back to search results", measures_url(search_code: workbasket_settings.initial_search_results_code)

h2.heading-large
  - if workbasket.awaiting_cross_check?
    | Submitted for Cross-Check
  - else
    = workbasket_author? ? 'Edit measures' : 'Review measures'

= render "measures/bulks/details"

script
  == "window.__workbasket_id = #{workbasket.id};"
  == "window.__pagination_metadata = #{pagination_metadata.to_json};"
  == "window.all_settings = #{workbasket_settings.settings.to_json};"
  == "window.current_step_settings = #{workbasket_settings.main_step_settings.to_json};"

- cache [ "measure_form_js_variabless", expires_in: 8.hours ] do
  = render "workbaskets/shared/js_variables", form: ::WorkbasketForms::CreateMeasuresForm.new(Measure.new)

.bulk-edit-measures
  bulk-edit-records primary-key="measure_sid" initial-sort-key="measure_sid" :bulk-actions="bulkActions" thing="measures" :columns="columns" :actions="actions" :record-table-processing="recordTableProcessing" :preprocess-record="preprocessRecord" :read-only="false"
    template slot-scope="slotProps"
      = content_tag "change-duties-popup", nil, {"v-if" => "slotProps.selectedAction == 'change_duties'", ":open" => "true", ":measures" => "slotProps.selectedRecordObjects", ":on-close" => "slotProps.closeAllPopups", "@measures-updated" => "slotProps.recordsUpdated"}

      = content_tag "change-conditions-popup", nil, {"v-if" => "slotProps.selectedAction == 'change_conditions'", ":open" => "true", ":measures" => "slotProps.selectedRecordObjects", ":on-close" => "slotProps.closeAllPopups", "@measures-updated" => "slotProps.recordsUpdated"}

      = content_tag "change-validity-period-popup", nil, {"v-if" => "slotProps.selectedAction == 'change_validity_period'", ":open" => "true", ":measures" => "slotProps.selectedRecordObjects", ":on-close" => "slotProps.closeAllPopups", "@measures-updated" => "slotProps.recordsUpdated"}

      = content_tag "change-regulation-popup", nil, {"v-if" => "slotProps.selectedAction == 'change_regulation'", ":open" => "true", ":measures" => "slotProps.selectedRecordObjects", ":on-close" => "slotProps.closeAllPopups", "@measures-updated" => "slotProps.recordsUpdated"}

      = content_tag "change-commodity-code-popup", nil, {"v-if" => "slotProps.selectedAction == 'change_commodity_codes'", ":open" => "true", ":measures" => "slotProps.selectedRecordObjects", ":on-close" => "slotProps.closeAllPopups", "@measures-updated" => "slotProps.recordsUpdated"}

      = content_tag "change-origins-popup", nil, {"v-if" => "slotProps.selectedAction == 'change_origin'", ":open" => "true", ":measures" => "slotProps.selectedRecordObjects", ":on-close" => "slotProps.closeAllPopups", "@measures-updated" => "slotProps.recordsUpdated"}

      = content_tag "remove-measures-popup", nil, {"v-if" => "slotProps.selectedAction == 'remove_from_group'", ":open" => "true", ":measures" => "slotProps.selectedRecordObjects", ":on-close" => "slotProps.closeAllPopups", ":selected-all-measures" => "slotProps.selectedAllMeasures", ":measures-removed-cb" => "slotProps.recordsRemoved", ":all-measures-removed-cb" => "slotProps.allRecordsRemoved"}

      = content_tag "remove-measures-popup", nil, {"v-if" => "slotProps.selectedAction == 'remove_from_group'", ":open" => "true", ":measures" => "slotProps.selectedRecordObjects", ":on-close" => "slotProps.closeAllPopups", ":selected-all-measures" => "slotProps.selectedAllMeasures", ":measures-removed-cb" => "slotProps.recordsRemoved", ":all-measures-removed-cb" => "slotProps.allRecordsRemoved"}

      = content_tag "force-delete-measures-popup", nil, {"v-if" => "slotProps.selectedAction == 'force_delete'", ":open" => "true", ":measures" => "slotProps.selectedRecordObjects", ":on-close" => "slotProps.closeAllPopups", "@measures-force-deleted" => "slotProps.recordsForceDeleted"}

      = content_tag "change-additional-code-popup", nil, {"v-if" => "slotProps.selectedAction == 'change_additional_code'", ":open" => "true", ":measures" => "slotProps.selectedRecordObjects", ":on-close" => "slotProps.closeAllPopups", "@measures-updated" => "slotProps.recordsUpdated"}

      = content_tag "change-footnotes-popup", nil, {"v-if" => "slotProps.selectedAction == 'change_footnotes'", ":open" => "true", ":measures" => "slotProps.selectedRecordObjects", ":on-close" => "slotProps.closeAllPopups", "@measures-updated" => "slotProps.recordsUpdated"}

      = content_tag "restore-records-popup", nil, {"v-if" => "slotProps.selectedAction == 'restore_records'", ":open" => "true", ":records" => "slotProps.selectedRecordObjects", ":on-close" => "slotProps.closeAllPopups", "@records-restored" => "slotProps.restoreRecords"}

= render "shared/vue_templates/bulk_edit_records"
= render "shared/vue_templates/measure_origin"
= render "shared/vue_templates/change_duties"
= render "shared/vue_templates/change_conditions"
= render "shared/vue_templates/change_regulation"
= render "shared/vue_templates/change_commodity_codes"
= render "shared/vue_templates/change_validity_period"
= render "shared/vue_templates/change_origins"
= render "shared/vue_templates/remove_measures"
= render "shared/vue_templates/delete_measures"
= render "shared/vue_templates/force_delete_measures"
= render "shared/vue_templates/change_additional_code"
= render "shared/vue_templates/change_footnotes"
= render "shared/vue_templates/restore_records"

= render "shared/bulks/save_actions_popups/collection"
