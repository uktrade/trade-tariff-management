= simple_form_for search_form, as: :search,
                               url: search_certificates_url,
                               method: :get,
                               html: { class: "js-search-certificate-form", "data-parsley-validate" => true } do |f|

  .bootstrap-row
    .col-lg-6.col-md-7.col-sm-10.col-xs-12
      fieldset
        form-group :errors="errors" error-key="general"
          template slot-scope="slotProps"
            label.form-label
              span.error-message v-if="slotProps.hasError" v-cloak=""
                | {{slotProps.error}}

            h3.heading-medium.sub_heading_block
              | What is the certificate type?

            .bootstrap-row
              .col-lg-8.col-md-10.col-sm-12.col-xs-12
                = content_tag "custom-select", "", { ":options" => "certificate_types_list" , "allow-clear" => true, "code-field" => "certificate_type_code", "label-field" => "description", "value-field" => "certificate_type_code", "v-model" => "search.certificate_type_code", placeholder: "― select certificate type ―", "name" => "search[certificate_type_code]", "code-class-name" => "prefix--country" }

            h3.heading-medium
              | Enter a certificate code or search string

            .bootstrap-row
              .col-lg-12.col-md-12.col-sm-12.col-xs-12
                = f.input :q, label: false, input_html: { class: "form-control", "v-model" => "search.q" }

      fieldset
        form-group :errors="errors" error-key="start_date"
          template slot-scope="slotProps"
            h3.heading-medium.with_smaller_top_border
              | Optionally search for certificates that are valid from

            label.form-label.search-certificates-error-container
              span.error-message v-if="slotProps.hasError" v-cloak=""
                | {{slotProps.error}}
              span.form-hint

              .bootstrap-row
                .col-lg-6.col-md-7.col-sm-10.col-xs-12
                  = f.input :start_date, label: false, input_html: { class: "start-date", "data-parsley-moment" => true, "data-parsley-max-date-to" => "#search_end_date", "data-parsley-max-date-to-message" => "Start date should not be greater than End date", "data-parsley-trigger" => "change", "data-parsley-trigger-after-failure" => "change", "v-model" => "search.start_date" }

      fieldset
        form-group :errors="errors" error-key="end_date"
          template slot-scope="slotProps"
            h3.heading-medium.with_smaller_top_border
              | Optionally search for certificates that are valid until

            label.form-label.search-certificates-error-container
              span.error-message v-if="slotProps.hasError" v-cloak=""
                | {{slotProps.error}}
              span.form-hint

            .bootstrap-row
              .col-lg-6.col-md-7.col-sm-10.col-xs-12
                = f.input :end_date, label: false, input_html: { class: "end-date", "data-parsley-moment" => true, "data-parsley-min-date-to" => "#search_start_date", "data-parsley-min-date-to-message" => "End date should be greater than Start date", "data-parsley-trigger" => "change", "data-parsley-trigger-after-failure" => "change", "v-model" => "search.end_date" }

      .bootstrap-row
        .col-lg-6.col-md-7.col-sm-10.col-xs-12
          .form-actions
            .submit_group_for_cross_check_block
              button type="submit" name="save_progress" class="button js-validate-certificate-search-form js-workbasket-base-continue-button js-workbasket-base-submit-button"
                | Search

              .js-workbasket-base-continue-spinner.spinner_block.hidden
                = render "measures/bulks/loading_spinner", message: "Loading..."

            = link_to "Clear form", search_certificates_url, class: 'secondary-button js-workbasket-base-exit-button'

